#compdef udisksctl -*- sh -*-

_paths() {
    local -a _path_list

    for _path in $(_call_program paths "udisksctl complete \"udisksctl $words\" $CURSOR"); do
        _path_list+=${_path//:/\\:}
    done

    _describe 'paths' _path_list
}

_udisksctl() {
    typeset -A opt_args
    local curcontext="$curcontext" state line

    _arguments -C \
        '1:udisksctl commands:->cmds' \
        '*:: :->cmd_args' \

    case $state in
        cmds)
            local commands; commands=(
                'help:Show help'
                'info:Show info about an object'
                'dump:Show info about all object'
                'status:Shows high-level status'
                'monitor:Monitor changes to objects'
                'mount:Mount a filesystem'
                'unmount:Unmount a filesystem'
                'unlock:Unlock an encrypted device'
                'lock:Lock an encrypted device'
                'loop-setup:Set-up a loop device'
                'loop-delete:Delete a loop device'
                'smart-simulate:Set SMART data for a drive'
            )
            _describe -t commands 'udisksctl commands' commands
        ;;

        cmd_args) local -a commonargs
            commonargs=($commonargs {-p,--object-path}'[Object to get information about]:object path:_paths')
            commonargs=($commonargs {-b,--block-device}'[Block device to get information about]:block device:_paths')
            case $words[1] in
                info)
                    _arguments \
                        {-d,--drive}'[Drive to get information about]:drives:_paths' \
                ;;
                mount)
                    _arguments $commonargs \
                        {-t,--filesystem-type}'[Filesystem type to use]:fs type:_file_systems' \
                        {-o,--options}'[Mount options]' \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
                unmount)
                    _arguments $commonargs \
                        {-f,--force}'[Force/lazy unmount]' \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
                unlock|lock)
                    _arguments $commonargs \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
                loop-setup)
                    _arguments \
                        {-f,--file}'[File to set-up a loop device for]:files:_files' \
                        {-r,--read-only}'[Setup read-only device]' \
                        {-o,--offset}'[Start at <num> bytes into file]:offset in bytes:' \
                        {-s,--size}'[Limit size to <num> bytes]:limit in bytes:' \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
                loop-delete)
                    _arguments $commonargs \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
                smart-simulate)
                    _arguments $commonargs \
                        {-f,--file}'[File with libatasmart blob]:files:_files' \
                        '(--no-user-interaction)--no-user-interaction[Do not authenticate the user if needed]' \
                ;;
            esac
        ;;
    esac
}

_udisksctl "$@"
